#include <stdlib.h>
#include <stdint.h>

typedef uint16_t word;

// in words
#define RAM_SIZE 0x10000
#define REGISTER_COUNT 8

typedef struct dcpu_t_
{
  word registers [REGISTER_COUNT];
  word ram [RAM_SIZE];
  word pc;
  word sp;
  
} dcpu_t;


word program [] = {
  0x7c01, 0x0030, 0x7de1, 0x1000, 0x0020, 0x7803, 0x1000, 0xc00d,
  0x7dc1, 0x001a, 0xa861, 0x7c01, 0x2000, 0x2161, 0x2000, 0x8463,
  0x806d, 0x7dc1, 0x000d, 0x9031, 0x7c10, 0x0018, 0x7dc1, 0x001a,
  0x9037, 0x61c1, 0x7dc1, 0x001a, 0x0000, 0x0000, 0x0000, 0x0000
};

#define DCPU_INST_OPCODE_MASK  0x000F
#define DCPU_INST_OPERAND_MASK 0xFFF0

typedef enum operand_t_
  {
    
  } operant_t;

void decode (word ram [], word pc)
{
  
}

int main (void)
{
  return 0;
}
